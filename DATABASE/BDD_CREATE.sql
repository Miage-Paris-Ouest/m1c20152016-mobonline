-- Création de la table des pays
CREATE TABLE M1_COUNTRIES(
   ISO2 CHAR(2) NOT NULL,
   COUNTRY_NAME VARCHAR(80) NOT NULL,
   COUNTRY_NICE_NAME VARCHAR(80) NOT NULL,
   COUNTRY_CODE NUMBER(6) DEFAULT NULL,
   ISO3 CHAR(3) DEFAULT NULL,
   PHONECODE NUMBER(5) NOT NULL,
   PRIMARY KEY (ISO2)
);

-- Création de la table des villes avec leurs localisations
CREATE TABLE M1_CITIES(
  CITY_ID NUMBER(11) NOT NULL,
  CITY_NAME VARCHAR(40) NOT NULL,
  LATITUDE FLOAT(20) NOT NULL,
  LONGITUDE FLOAT(20) NOT NULL,
  ALTITUDE FLOAT(5) NOT NULL,
  COUNTRY_ISO2 CHAR(2) NOT NULL,
  PRIMARY KEY (CITY_ID),
  CONSTRAINT FK_COUNTRYISO_CITY
    FOREIGN KEY (COUNTRY_ISO2)
    REFERENCES M1_COUNTRIES(ISO2)
);

-- Status = 1 Super Admin, Status=2 Admin, Status = 3 Student, Status = 4 Contact
CREATE TABLE M1_STATUS(
  STATUS_ID NUMBER(2) NOT NULL,
  LABEL VARCHAR(50),
  PRIMARY KEY(STATUS_ID)
);


CREATE TABLE M1_UNIVERSITIES(
  UNIV_ID NUMBER NOT NULL,
  UNIV_NAME VARCHAR(256) NOT NULL,
  ADRESSE VARCHAR(512) NOT NULL,
  WEBSITE VARCHAR(500),
  CITY NUMBER(11) NOT NULL,
  PRIMARY KEY(UNIV_ID),
  CONSTRAINT FK_CITY_UNIVERSITY
    FOREIGN KEY (CITY)
    REFERENCES M1_CITIES(CITY_ID)
);


CREATE TABLE M1_PERSONS(
  PERSON_ID NUMBER NOT NULL,
  PERSON_FIRST_NAME VARCHAR(60) NOT NULL,
  PERSON_LAST_NAME VARCHAR(60) NOT NULL,
  PERSON_MAIL VARCHAR(100) NOT NULL,
  PERSON_PHONE VARCHAR(20),
  STATUS  NUMBER(2) NOT NULL,
  UNIVERSITY NUMBER NOT NULL,
  PRIMARY KEY(PERSON_ID),
  CONSTRAINT FK_STATUS_PERSON
    FOREIGN KEY (STATUS)
    REFERENCES M1_STATUS(STATUS_ID),
  CONSTRAINT FK_UNIVERSITY_PERSON
    FOREIGN KEY (UNIVERSITY)
    REFERENCES M1_UNIVERSITIES(UNIV_ID)
);

CREATE TABLE M1_USERS(
  USER_ID NUMBER NOT NULL,
  USER_LOGIN VARCHAR(30) NOT NULL UNIQUE,
  USER_PASSWORD VARCHAR(100) NOT NULL,
  PERSON NUMBER NOT NULL UNIQUE,
  PRIMARY KEY(USER_ID),
  CONSTRAINT FK_PERSON_USER
    FOREIGN KEY (PERSON)
    REFERENCES M1_PERSONS(PERSON_ID)
);


CREATE TABLE M1_BUILDING_TYPES(
  BUILDING_TYPE_ID NUMBER NOT NULL,
  BUILDING_TYPE_NAME VARCHAR(128) NOT NULL,
  PRIMARY KEY (BUILDING_TYPE_ID)
);

CREATE TABLE M1_BUILDINGS(
  BUILDING_ID NUMBER NOT NULL,
  BUILDING_NAME VARCHAR(200) NOT NULL,
  BUILDING_DESCRIPTION VARCHAR(2048),
  BUILDING_LATITUDE FLOAT(20) NOT NULL,
  BUILDING_LONGITUDE FLOAT(20) NOT NULL,
  UNIVERSITY NUMBER NOT NULL,
  BUILDING_TYPE NUMBER NOT NULL,
  PRIMARY KEY (BUILDING_ID),
  CONSTRAINT FK_UNIVERSITY_BUILDING_TYPE
    FOREIGN KEY (BUILDING_TYPE)
    REFERENCES M1_BUILDING_TYPES(BUILDING_TYPE_ID),
  CONSTRAINT FK_UNIVERSITY_BUILDING
    FOREIGN KEY (UNIVERSITY)
    REFERENCES M1_UNIVERSITIES(UNIV_ID)
);

CREATE TABLE M1_PRODUCT_PRICES(
  PRICE_ID NUMBER NOT NULL,
  PRICE_NUMBER NUMBER NOT NULL,
  PRICE_UNITY VARCHAR(32) NOT NULL,
  PRIMARY KEY (PRICE_ID)
);

CREATE TABLE M1_PRODUCTS (
  PRODUCT_ID NUMBER NOT NULL,
  PRODUCT_NAME VARCHAR(128) NOT NULL,
  PRODUCT_DESCRIPTION VARCHAR(1024) NOT NULL,
  PRIMARY KEY (PRODUCT_ID)
);

CREATE TABLE M1_DISPONIBIITIES(
  PRODUCT NUMBER NOT NULL,
  BUILDING NUMBER NOT NULL,
  PRODUCT_PRICE NUMBER NOT NULL,
  PRIMARY KEY (PRODUCT, BUILDING, PRODUCT_PRICE),
  CONSTRAINT FK_DISPO_PRODUCT
    FOREIGN KEY (PRODUCT)
    REFERENCES M1_PRODUCTS(PRODUCT_ID),
  CONSTRAINT FK_DISPO_BUILDING
    FOREIGN KEY (BUILDING)
    REFERENCES M1_BUILDINGS(BUILDING_ID),
  CONSTRAINT FK_DISPO_PRICE
    FOREIGN KEY (PRODUCT_PRICE)
    REFERENCES M1_PRODUCT_PRICES(PRICE_ID)
);

CREATE TABLE M1_CATEGORIES(
  CATEGORY_ID NUMBER NOT NULL,
  CATEGORY_NAME VARCHAR(256),
  CATEGORY_PARENT NUMBER NOT NULL,
  PRIMARY KEY(CATEGORY_ID)
);

CREATE TABLE M1_CATEGORIES_UNIVERSITY(
  CAT_UNIV_ID NUMBER NOT NULL,
  UNIVERSITY NUMBER NOT NULL,
  PAGE_CATEGORY NUMBER NOT NULL,
  PRIMARY KEY(CAT_UNIV_ID),
  CONSTRAINT FK_UNIVERSITY_PAGE
    FOREIGN KEY (UNIVERSITY)
    REFERENCES M1_UNIVERSITIES(UNIV_ID),
  CONSTRAINT FK_CATEGORY_PAGE
    FOREIGN KEY (PAGE_CATEGORY)
    REFERENCES M1_CATEGORIES(CATEGORY_ID)
);

CREATE TABLE M1_PAGES(
  PAGE_ID NUMBER NOT NULL,
  PAGE_TITLE VARCHAR(256) NOT NULL,
  PAGE_CONTENT VARCHAR(4000) NOT NULL,
  PAGE_CAT_UNIV_ID NUMBER NOT NULL,
  PAGE_PUBLISH_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY(PAGE_ID),
  CONSTRAINT FK_CATEGORY_UNIVERSITY_PAGE
    FOREIGN KEY (PAGE_CAT_UNIV_ID)
    REFERENCES M1_CATEGORIES_UNIVERSITY(CAT_UNIV_ID)
);

CREATE TABLE M1_PAGES_META(
  PAGE_META_ID NUMBER NOT NULL,
  PAGE_META_KEY VARCHAR(128) NOT NULL,
  PAGE_META_VALUE VARCHAR(4000) NOT NULL,
  PAGE_META_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  PAGE NUMBER NOT NULL,
  META_AUTHOR NUMBER NOT NULL,
  PRIMARY KEY(PAGE_META_ID),
  CONSTRAINT FK_PERSON_META
    FOREIGN KEY (META_AUTHOR)
    REFERENCES M1_PERSONS(PERSON_ID),
  CONSTRAINT FK_PAGE_META
    FOREIGN KEY (PAGE)
    REFERENCES M1_PAGES(PAGE_ID)
);
